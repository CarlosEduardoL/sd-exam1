events {
   worker_connections	1024;
}

http {
    client_max_body_size 600M;
    include	mime.types;
    default_type	application/octet-stream;
    keepalive_timeout	65;

    upstream web {
        server {{web1}}:{{web_port}};
        server {{web2}}:{{web_port}};
    }

    # HTTPS Test server configuration.
    # Redirect HTTP traffic to HTTPS.
    server {
        listen 80 default_server;
        server_name _;
        index index.html;
        return 301 https://$host$request_uri;
        client_max_body_size 600M;
    }

    # Proxy HTTPS traffic using a self-signed certificate.
    server {
        listen 443 ssl default_server;
        server_name {{ server_hostname }};
        client_max_body_size 600M;

        location / {
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_pass          http://web;
            proxy_read_timeout  90s;
            proxy_redirect      http://web {{ server_hostname }};
        }

        ssl_certificate {{ certificate_dir }}/{{ server_hostname }}/fullchain.pem;
        ssl_certificate_key {{ certificate_dir }}/{{ server_hostname }}/privkey.pem;
    }
}
